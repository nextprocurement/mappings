[
  {
    "op": "core/column-removal",
    "columnName": "Summary",
    "description": "Remove column Summary"
  },
  {
    "op": "core/column-removal",
    "columnName": "TenderingProcess_TenderSubmission_EndDate",
    "description": "Remove column TenderingProcess_TenderSubmission_EndDate"
  },
  {
    "op": "core/column-removal",
    "columnName": "TenderingProcess_TenderSubmission_EndTime",
    "description": "Remove column TenderingProcess_TenderSubmission_EndTime"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "LocatedContractingParty_Name",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "LocatedContractingParty_Name_URI",
    "columnInsertIndex": 8,
    "description": "Create column LocatedContractingParty_Name_URI at index 8 based on column LocatedContractingParty_Name using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LocatedContractingParty_Name_URI",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"-\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LocatedContractingParty_Name_URI using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"-\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LocatedContractingParty_Name_URI",
    "expression": "grel:value.replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LocatedContractingParty_Name_URI using expression grel:value.replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ID",
    "expression": "grel:value.replace(\"https://contrataciondelestado.es/sindicacion/datosAbiertosMenores/\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ID using expression grel:value.replace(\"https://contrataciondelestado.es/sindicacion/datosAbiertosMenores/\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ContractFolder_ID",
    "expression": "grel:value.replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ContractFolder_ID using expression grel:value.replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LegalDocumentReference_ID",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LegalDocumentReference_ID using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LegalDocumentReference_ID",
    "expression": "grel:value.replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LegalDocumentReference_ID using expression grel:value.replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TechnicalDocumentReference_ID",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TechnicalDocumentReference_ID using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TechnicalDocumentReference_ID",
    "expression": "grel:value.replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TechnicalDocumentReference_ID using expression grel:value.replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ProcurementProject_CountrySubentity",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ProcurementProject_CountrySubentity using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ProcurementProject_CountrySubentity",
    "expression": "grel:value.replace(/[^A-ÑZa-ñz0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ProcurementProject_CountrySubentity using expression grel:value.replace(/[^A-ÑZa-ñz0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LocatedContractingParty_ID",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\").replace(\"\\\"\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LocatedContractingParty_ID using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\").replace(\"\\\"\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ProcurementProject_ItemClassificationCode",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ProcurementProject_ItemClassificationCode using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ProcurementProject_ItemClassificationCode",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ProcurementProject_ItemClassificationCode using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_ResultCode",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_ResultCode using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_ResultCode",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_ResultCode using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_Description",
    "expression": "grel:if(value.startsWith(\"['\"), value.replace(\",\", \"\"), value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_Description using expression grel:if(value.startsWith(\"['\"), value.replace(\",\", \"\"), value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_Description",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_Description using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_Description",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_Description using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_AwardDate",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_AwardDate using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_AwardDate",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_AwardDate using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_ReceivedTenderQuantity",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_ReceivedTenderQuantity using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_ReceivedTenderQuantity",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_ReceivedTenderQuantity using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_StartDate",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_StartDate using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_StartDate",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_StartDate using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_ContractID",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_ContractID using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_ContractID",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_ContractID using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_ContractIssueDate",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_ContractIssueDate using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_ContractIssueDate",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_ContractIssueDate using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_WinningParty_ID",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_WinningParty_ID using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_WinningParty_ID",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_WinningParty_ID using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_WinningParty_Name",
    "expression": "grel:if(value.startsWith(\"['\"), value.replace(\",\", \"\"), value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_WinningParty_Name using expression grel:if(value.startsWith(\"['\"), value.replace(\",\", \"\"), value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_WinningParty_Name",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_WinningParty_Name using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_WinningParty_Name",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_WinningParty_Name using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_AwardedTenderedProject_TaxExclusiveAmount",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_AwardedTenderedProject_TaxExclusiveAmount using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_AwardedTenderedProject_TaxExclusiveAmount",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_AwardedTenderedProject_TaxExclusiveAmount using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_AwardedTenderedProject_PayableAmount",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_AwardedTenderedProject_PayableAmount using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_AwardedTenderedProject_PayableAmount",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_AwardedTenderedProject_PayableAmount using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ValidNoticeInfo_NoticeTypeCode",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ValidNoticeInfo_NoticeTypeCode using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ValidNoticeInfo_NoticeTypeCode",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ValidNoticeInfo_NoticeTypeCode using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ValidNoticeInfo_PublicationMediaName",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ValidNoticeInfo_PublicationMediaName using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ValidNoticeInfo_PublicationMediaName",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ValidNoticeInfo_PublicationMediaName using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ValidNoticeInfo_IssueDate",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ValidNoticeInfo_IssueDate using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ValidNoticeInfo_IssueDate",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ValidNoticeInfo_IssueDate using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ValidNoticeInfo_DocumentTypeCode",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ValidNoticeInfo_DocumentTypeCode using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ValidNoticeInfo_DocumentTypeCode",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ValidNoticeInfo_DocumentTypeCode using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ValidNoticeInfo_URI",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ValidNoticeInfo_URI using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ValidNoticeInfo_URI",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ValidNoticeInfo_URI using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ValidNoticeInfo_FileName",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ValidNoticeInfo_FileName using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ValidNoticeInfo_FileName",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ValidNoticeInfo_FileName using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ProcurementProjectLot_ID",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ProcurementProjectLot_ID using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ProcurementProjectLot_ID",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ProcurementProjectLot_ID using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ProcurementProjectLot_Name",
    "expression": "grel:if(value.startsWith(\"['\"), value.replace(\",\", \"\"), value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ProcurementProjectLot_Name using expression grel:if(value.startsWith(\"['\"), value.replace(\",\", \"\"), value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ProcurementProjectLot_Name",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ProcurementProjectLot_Name using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ProcurementProjectLot_Name",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ProcurementProjectLot_Name using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ProcurementProjectLot_TotalAmount",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ProcurementProjectLot_TotalAmount using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ProcurementProjectLot_TotalAmount",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ProcurementProjectLot_TotalAmount using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ProcurementProjectLot_TaxExclusiveAmount",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ProcurementProjectLot_TaxExclusiveAmount using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ProcurementProjectLot_TaxExclusiveAmount",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ProcurementProjectLot_TaxExclusiveAmount using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ProcurementProjectLot_ItemClassificationCode",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ProcurementProjectLot_ItemClassificationCode using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ProcurementProjectLot_ItemClassificationCode",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ProcurementProjectLot_ItemClassificationCode using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_AwardedTenderedProject_ProcurementProjectLotID",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_AwardedTenderedProject_ProcurementProjectLotID using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_AwardedTenderedProject_ProcurementProjectLotID",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_AwardedTenderedProject_ProcurementProjectLotID using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "AdditionalDocumentReference_ID",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AdditionalDocumentReference_ID using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "AdditionalDocumentReference_ID",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AdditionalDocumentReference_ID using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "AdditionalDocumentReference_URI",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AdditionalDocumentReference_URI using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "AdditionalDocumentReference_URI",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AdditionalDocumentReference_URI using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "AdditionalDocumentReference_DocumentHash",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AdditionalDocumentReference_DocumentHash using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "AdditionalDocumentReference_DocumentHash",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AdditionalDocumentReference_DocumentHash using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_SMEAwardedIndicator",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_SMEAwardedIndicator using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_SMEAwardedIndicator",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_SMEAwardedIndicator using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_AbnormallyLowTendersIndicator",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_AbnormallyLowTendersIndicator using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_AbnormallyLowTendersIndicator",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_AbnormallyLowTendersIndicator using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderingTerms_FundingProgramCode",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderingTerms_FundingProgramCode using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderingTerms_FundingProgramCode",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderingTerms_FundingProgramCode using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ContractModification_ID",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ContractModification_ID using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ContractModification_ID",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ContractModification_ID using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ContractModification_Note",
    "expression": "grel:if(value.startsWith(\"['\"), value.replace(\",\", \"\"), value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ContractModification_Note using expression grel:if(value.startsWith(\"['\"), value.replace(\",\", \"\"), value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ContractModification_Note",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ContractModification_Note using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ContractModification_Note",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ContractModification_Note using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ContractModification_ContractID",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ContractModification_ContractID using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ContractModification_ContractID",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ContractModification_ContractID using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ContractModification_TaxExclusiveAmount",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ContractModification_TaxExclusiveAmount using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ContractModification_TaxExclusiveAmount",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ContractModification_TaxExclusiveAmount using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ContractModification_Final_TaxExclusiveAmount",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ContractModification_Final_TaxExclusiveAmount using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ContractModification_Final_TaxExclusiveAmount",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ContractModification_Final_TaxExclusiveAmount using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ContractModification_DurationMeasure",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ContractModification_DurationMeasure using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ContractModification_DurationMeasure",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ContractModification_DurationMeasure using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ContractModification_FinalDurationMeasure",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ContractModification_FinalDurationMeasure using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ContractModification_FinalDurationMeasure",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ContractModification_FinalDurationMeasure using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LocatedContractingParty_ActivityCode",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LocatedContractingParty_ActivityCode using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LocatedContractingParty_ActivityCode",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LocatedContractingParty_ActivityCode using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_WinningParty_CountrySubentityCode",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_WinningParty_CountrySubentityCode using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_WinningParty_CountrySubentityCode",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_WinningParty_CountrySubentityCode using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_WinningParty_CityName",
    "expression": "grel:if(value.startsWith(\"['\"), value.replace(\",\", \"\"), value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_WinningParty_CityName using expression grel:if(value.startsWith(\"['\"), value.replace(\",\", \"\"), value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_WinningParty_CityName",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_WinningParty_CityName using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_WinningParty_CityName",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_WinningParty_CityName using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_WinningParty_PostalZone",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_WinningParty_PostalZone using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_WinningParty_PostalZone",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_WinningParty_PostalZone using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_WinningParty_CountryCode",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_WinningParty_CountryCode using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_WinningParty_CountryCode",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_WinningParty_CountryCode using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TendererStatus_ProcurementProjectLotID",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TendererStatus_ProcurementProjectLotID using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TendererStatus_ProcurementProjectLotID",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TendererStatus_ProcurementProjectLotID using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_WinningParty_CompanyTypeCode",
    "expression": "grel:if(value.contains(\",\"), \"\", value)",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_WinningParty_CompanyTypeCode using expression grel:if(value.contains(\",\"), \"\", value)"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_WinningParty_CompanyTypeCode",
    "expression": "grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_WinningParty_CompanyTypeCode using expression grel:value.replace(\"[\", \"\").replace(\"]\", \"\").replace(\"'\", \"\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "TenderResult_WinningParty_Name",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "TenderResult_WinningParty_Name_URI",
    "columnInsertIndex": 38,
    "description": "Create column TenderResult_WinningParty_Name_URI at index 38 based on column TenderResult_WinningParty_Name using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_WinningParty_Name_URI",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_WinningParty_Name_URI using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_WinningParty_Name_URI",
    "expression": "grel:value.replace(\"Ñ\", \"N\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_WinningParty_Name_URI using expression grel:value.replace(\"Ñ\", \"N\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_WinningParty_ID",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_WinningParty_ID using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_WinningParty_ID",
    "expression": "grel:value.replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_WinningParty_ID using expression grel:value.replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ID",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ID using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ContractFolder_ID",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ContractFolder_ID using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LocatedContractingParty_Name_URI",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LocatedContractingParty_Name_URI using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ProcurementProject_CountrySubentityCode",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ProcurementProject_CountrySubentityCode using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ProcurementProject_DurationMeasure",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ProcurementProject_DurationMeasure using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LocatedContractingParty_ID",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LocatedContractingParty_ID using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_WinningParty_Name_URI",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_WinningParty_Name_URI using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LocatedContractingParty_ID",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LocatedContractingParty_ID using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_ContractID",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_ContractID using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_WinningParty_ID",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_WinningParty_ID using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ProcurementProjectLot_ID",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ProcurementProjectLot_ID using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TenderResult_AwardedTenderedProject_ProcurementProjectLotID",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TenderResult_AwardedTenderedProject_ProcurementProjectLotID using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ContractModification_ID",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ContractModification_ID using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ContractModification_ContractID",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ContractModification_ContractID using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LocatedContractingParty_Parent_Parent_ID",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LocatedContractingParty_Parent_Parent_ID using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LocatedContractingParty_Parent_Parent_Parent_Parent_ID",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LocatedContractingParty_Parent_Parent_Parent_Parent_ID using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_ID",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_ID using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LocatedContractingParty_Parent_Parent_Parent_ID",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LocatedContractingParty_Parent_Parent_Parent_ID using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_Parent_ID",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_Parent_ID using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TendererStatus_ProcurementProjectLotID",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TendererStatus_ProcurementProjectLotID using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_Parent_Parent_ID",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_Parent_Parent_ID using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LegalDocumentReference_ID",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LegalDocumentReference_ID using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "TechnicalDocumentReference_ID",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column TechnicalDocumentReference_ID using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "AdditionalDocumentReference_ID",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column AdditionalDocumentReference_ID using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "ProcurementProject_CountrySubentity",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\"Ñ\",\"N\").replace(\"ñ\",\"n\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column ProcurementProject_CountrySubentity using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\"Ñ\",\"N\").replace(\"ñ\",\"n\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "LocatedContractingParty_Parent_Parent_PartyName",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "LocatedContractingParty_Parent_Parent_PartyName_URI",
    "columnInsertIndex": 35,
    "description": "Create column LocatedContractingParty_Parent_Parent_PartyName_URI at index 35 based on column LocatedContractingParty_Parent_Parent_PartyName using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LocatedContractingParty_Parent_Parent_PartyName_URI",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LocatedContractingParty_Parent_Parent_PartyName_URI using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LocatedContractingParty_Parent_Parent_PartyName_URI",
    "expression": "grel:value.replace(\" \", \"-\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LocatedContractingParty_Parent_Parent_PartyName_URI using expression grel:value.replace(\" \", \"-\")"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LocatedContractingParty_Parent_Parent_PartyName_URI",
    "expression": "grel:value.replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LocatedContractingParty_Parent_Parent_PartyName_URI using expression grel:value.replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "LocatedContractingParty_Parent_PartyName",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "LocatedContractingParty_Parent_PartyName_URI",
    "columnInsertIndex": 34,
    "description": "Create column LocatedContractingParty_Parent_PartyName_URI at index 34 based on column LocatedContractingParty_Parent_PartyName using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LocatedContractingParty_Parent_PartyName_URI",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\"Ñ\",\"N\").replace(\"ñ\",\"n\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LocatedContractingParty_Parent_PartyName_URI using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\"Ñ\",\"N\").replace(\"ñ\",\"n\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "LocatedContractingParty_Parent_Parent_Parent_PartyName",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "LocatedContractingParty_Parent_Parent_Parent_PartyName_URI",
    "columnInsertIndex": 38,
    "description": "Create column LocatedContractingParty_Parent_Parent_Parent_PartyName_URI at index 38 based on column LocatedContractingParty_Parent_Parent_Parent_PartyName using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LocatedContractingParty_Parent_Parent_Parent_PartyName_URI",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\"Ñ\",\"N\").replace(\"ñ\",\"n\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LocatedContractingParty_Parent_Parent_Parent_PartyName_URI using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\"Ñ\",\"N\").replace(\"ñ\",\"n\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "LocatedContractingParty_Parent_Parent_Parent_Parent_PartyName",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "LocatedContractingParty_Parent_Parent_Parent_Parent_PartyName_URI",
    "columnInsertIndex": 45,
    "description": "Create column LocatedContractingParty_Parent_Parent_Parent_Parent_PartyName_URI at index 45 based on column LocatedContractingParty_Parent_Parent_Parent_Parent_PartyName using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LocatedContractingParty_Parent_Parent_Parent_Parent_PartyName_URI",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\"Ñ\",\"N\").replace(\"ñ\",\"n\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LocatedContractingParty_Parent_Parent_Parent_Parent_PartyName_URI using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\"Ñ\",\"N\").replace(\"ñ\",\"n\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_PartyName",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_PartyName_URI",
    "columnInsertIndex": 47,
    "description": "Create column LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_PartyName_URI at index 47 based on column LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_PartyName using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_PartyName_URI",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\"Ñ\",\"N\").replace(\"ñ\",\"n\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_PartyName_URI using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\"Ñ\",\"N\").replace(\"ñ\",\"n\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_Parent_PartyName",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_Parent_PartyName_URI",
    "columnInsertIndex": 49,
    "description": "Create column LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_Parent_PartyName_URI at index 49 based on column LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_Parent_PartyName using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_Parent_PartyName_URI",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\"Ñ\",\"N\").replace(\"ñ\",\"n\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_Parent_PartyName_URI using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\"Ñ\",\"N\").replace(\"ñ\",\"n\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_Parent_Parent_PartyName",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_Parent_Parent_PartyName_URI",
    "columnInsertIndex": 63,
    "description": "Create column LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_Parent_Parent_PartyName_URI at index 63 based on column LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_Parent_Parent_PartyName using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_Parent_Parent_PartyName_URI",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\"Ñ\",\"N\").replace(\"ñ\",\"n\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_Parent_Parent_PartyName_URI using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\"Ñ\",\"N\").replace(\"ñ\",\"n\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/column-addition",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "baseColumnName": "LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_Parent_Parent_Parent_PartyName",
    "expression": "grel:value",
    "onError": "set-to-blank",
    "newColumnName": "LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_Parent_Parent_Parent_PartyName_URI",
    "columnInsertIndex": 112,
    "description": "Create column LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_Parent_Parent_Parent_PartyName_URI at index 112 based on column LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_Parent_Parent_Parent_PartyName using expression grel:value"
  },
  {
    "op": "core/text-transform",
    "engineConfig": {
      "facets": [],
      "mode": "row-based"
    },
    "columnName": "LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_Parent_Parent_Parent_PartyName",
    "expression": "grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\"Ñ\",\"N\").replace(\"ñ\",\"n\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")",
    "onError": "keep-original",
    "repeat": false,
    "repeatCount": 10,
    "description": "Text transform on cells in column LocatedContractingParty_Parent_Parent_Parent_Parent_Parent_Parent_Parent_Parent_PartyName using expression grel:value.replace(\"á\",\"a\").replace(\"é\",\"e\").replace(\"í\",\"i\").replace(\"ó\",\"o\").replace(\"ú\",\"u\").replace(\"Á\",\"A\").replace(\"É\",\"E\").replace(\"Í\",\"I\").replace(\"Ó\",\"O\").replace(\"Ú\",\"U\").replace(\"à\",\"a\").replace(\"è\",\"e\").replace(\"ì\",\"i\").replace(\"ò\",\"o\").replace(\"ù\",\"u\").replace(\"À\",\"A\").replace(\"È\",\"E\").replace(\"Ì\",\"I\").replace(\"Ò\",\"O\").replace(\"Ù\",\"U\").replace(\"Ñ\",\"N\").replace(\"ñ\",\"n\").replace(\" \", \"_\").replace(/[^A-Za-z0-9\\-._~]/, \"\")"
  },
  {
    "op": "core/column-move",
    "columnName": "LocatedContractingParty_Name_URI",
    "index": 7,
    "description": "Move column LocatedContractingParty_Name_URI to position 7"
  },
  {
    "op": "core/column-move",
    "columnName": "TenderResult_WinningParty_Name_URI",
    "index": 24,
    "description": "Move column TenderResult_WinningParty_Name_URI to position 24"
  }
]